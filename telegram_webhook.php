<?php
// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—à–∏–±–æ–∫ –∏ –ª–æ–≥–æ–≤
error_reporting(E_ALL);
ini_set('display_errors', 1);
ini_set('log_errors', 1);
ini_set('error_log', __DIR__.'/logs/php_errors.log');

// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π
define('STATES_DIR', __DIR__.'/states/');
if (!file_exists(STATES_DIR)) {
    mkdir(STATES_DIR, 0755, true);
}

// –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
$log_file = __DIR__.'/logs/telegram_webhook.log';
file_put_contents($log_file, "\n".date('[Y-m-d H:i:s]')." –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å\n", FILE_APPEND);

try {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–∞ –∑–∞–ø—Ä–æ—Å–∞
    if ($_SERVER['REQUEST_METHOD'] !== 'POST') {
        throw new Exception("–ù–µ–≤–µ—Ä–Ω—ã–π –º–µ—Ç–æ–¥ –∑–∞–ø—Ä–æ—Å–∞");
    }

    // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    require_once __DIR__.'/config.php';
    require_once __DIR__.'/functions.php';

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    $input = file_get_contents('php://input');
    $update = json_decode($input, true);
    if (json_last_error() !== JSON_ERROR_NONE) {
        throw new Exception("–û—à–∏–±–∫–∞ JSON: ".json_last_error_msg());
    }

    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
    file_put_contents($log_file, "–î–∞–Ω–Ω—ã–µ: ".print_r($update, true)."\n", FILE_APPEND);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    if (!isset($update['message']['text'])) {
        throw new Exception("–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏");
    }

    // –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
    $text = trim($update['message']['text']);
    $chat_id = $update['message']['chat']['id'];
    $user_id = $update['message']['from']['id'];
    $username = $update['message']['from']['username'] ?? '';
    $first_name = $update['message']['from']['first_name'] ?? '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';

    // –§–∞–π–ª —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    $state_file = STATES_DIR."user_$chat_id.state";

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    $state = file_exists($state_file) ? json_decode(file_get_contents($state_file), true) : null;
    
    // –ï—Å–ª–∏ —Ñ–∞–π–ª —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–≤—Ä–µ–∂–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç
    if (!$state || !isset($state['state'])) {
        $state = [
            'state' => 'idle',
            'data' => []
        ];
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    $response = '';
    $new_state = $state['state'];
    $update_state = true;

    if (str_starts_with($text, '/')) {
        $command = strtolower(explode(' ', $text)[0]);
        
        switch ($command) {
            case '/start':
                $response = "üëã –ü—Ä–∏–≤–µ—Ç, $first_name! –Ø –±–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n\n"
                          . "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                          . "/new - –°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç\n"
                          . "/status #ID - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å\n"
                          . "/help - –°–ø—Ä–∞–≤–∫–∞\n"
                          . "/cancel - –û—Ç–º–µ–Ω–∞";
                $new_state = 'idle';
                break;

            case '/help':
                $response = "‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞:\n\n"
                          . "/new - –°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç\n"
                          . "/status #ID - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å\n"
                          . "/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
                          . "/cancel - –û—Ç–º–µ–Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è";
                $new_state = 'idle';
                break;

            case '/new':
                $new_state = 'awaiting_description';
                $response = "‚úçÔ∏è –û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏:\n\n"
                          . "–ü—Ä–∏–º–µ—Ä: –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–Ω–æ–ø–∫–∞ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å' –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ\n\n"
                          . "–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel";
                break;

            case '/status':
                if (preg_match('/#([a-f0-9]+)/i', $text, $matches)) {
                    $ticket = getTicket($matches[1]);
                    if ($ticket) {
                        $status = [
                            'open' => 'üü¢ –û—Ç–∫—Ä—ã—Ç',
                            'in_progress' => 'üü° –í —Ä–∞–±–æ—Ç–µ',
                            'closed' => 'üî¥ –ó–∞–∫—Ä—ã—Ç'
                        ][$ticket['status']] ?? $ticket['status'];
                        
                        $response = "üìã –¢–∏–∫–µ—Ç #{$ticket['id']}\n"
                                  . "üìå –°—Ç–∞—Ç—É—Å: $status\n"
                                  . "üìÖ –°–æ–∑–¥–∞–Ω: {$ticket['created_at']}\n"
                                  . "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω: {$ticket['updated_at']}\n\n"
                                  . "üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {$ticket['message']}";
                    } else {
                        $response = "‚ùå –¢–∏–∫–µ—Ç #{$matches[1]} –Ω–µ –Ω–∞–π–¥–µ–Ω";
                    }
                } else {
                    $response = "‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ ID —Ç–∏–∫–µ—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n/status #ID\n\n"
                              . "–ü—Ä–∏–º–µ—Ä: /status #abc123";
                }
                $new_state = 'idle';
                break;

            case '/cancel':
                if ($new_state !== 'idle') {
                    $response = "‚ùå –¢–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ";
                    $new_state = 'idle';
                } else {
                    $response = "‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –æ—Ç–º–µ–Ω—ã";
                }
                break;

            default:
                $response = "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞\n\n"
                          . "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥";
                $new_state = 'idle';
        }
    } else {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
        switch ($state['state']) {
            case 'awaiting_description':
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–∫—Å—Ç –Ω–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π
                if (strlen(trim($text)) < 10) {
                    $response = "‚ö†Ô∏è –û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–µ–µ.";
                    $update_state = false; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è
                } else {
                    $ticket_id = createTicket($first_name, ($username ? $username.'@telegram.ru' : 'user_'.$user_id.'@telegram.ru'), $text, $user_id);
                    
                    if ($ticket_id) {
                        $response = "‚úÖ –¢–∏–∫–µ—Ç #$ticket_id —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!\n\n"
                                  . "üìå –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: üü¢ –û—Ç–∫—Ä—ã—Ç\n\n"
                                  . "–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥–æ–π:\n/status #$ticket_id";
                    } else {
                        error_log("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $user_id —Å —Ç–µ–∫—Å—Ç–æ–º: $text");
                        $response = "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.";
                    }
                    $new_state = 'idle';
                }
                break;

            default:
                // –î–ª—è –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
                if ($state['state'] === 'idle') {
                    $response = "‚ÑπÔ∏è –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ /new\n"
                              . "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–æ–º–∞–Ω–¥ –≤–≤–µ–¥–∏—Ç–µ /help";
                } else {
                    $response = "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≤–µ—Ä—à–∏—Ç–µ —Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /cancel";
                }
                $update_state = false;
        }
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if ($update_state) {
        if ($new_state === 'idle') {
            // –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ idle
            if (file_exists($state_file)) {
                unlink($state_file);
            }
        } else {
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            $state['state'] = $new_state;
            file_put_contents($state_file, json_encode($state));
        }
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞
    $send_result = sendTelegramMessage($chat_id, $response);
    file_put_contents($log_file, "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–≤–µ—Ç: ".($send_result ? '—É—Å–ø–µ—à–Ω–æ' : '–æ—à–∏–±–∫–∞')."\n", FILE_APPEND);

    if (!$send_result) {
        throw new Exception("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram");
    }

    http_response_code(200);
    echo 'OK';

} catch (Exception $e) {
    file_put_contents($log_file, "–û–®–ò–ë–ö–ê: ".$e->getMessage()."\n", FILE_APPEND);
    http_response_code(200);
    echo 'ERROR';
}
